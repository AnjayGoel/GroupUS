{"version":3,"sources":["initForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["InitForm","state","isLoading","isError","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","member_emails","trim","split","member_names","deadline","Date","parse","grpSize","parseInt","preventDefault","i","validator","isEmail","alert","length","payload","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","props","history","push","catch","err","info","style","justifyContent","display","CircularProgress","margin","Alert","severity","Box","id","Paper","elevation","borderRadius","padding","paddingTop","href","Grid","container","spacing","direction","onSubmit","TextField","type","required","data-parse","onChange","InputProps","inputProps","min","marginLeft","multiline","rows","rowsMax","label","variant","Button","color","React","Component","About","Done","textAlign","FillPreference","handleTag","delete","getNames","title","owner_name","all","chosen","chosenPref","match","params","secret","filter","item","map","e","newChosen","splice","newChosenPref","includes","items","onClick","onPref","pref","toString","flexDirection","alignItems","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","maxHeight","overflow","List","alignSelf","Item","ListItem","align","minWidth","max","IconButton","aria-label","fontSize","App","path","component","exact","ReactDOM","render","StrictMode","bgcolor","AppBar","position","Toolbar","document","getElementById"],"mappings":"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","file":"static/js/main.99c50985.chunk.js","sourcesContent":["import React from \"react\";\nimport validator from \"validator\";\nimport { Alert } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {\n  Paper,\n  Button,\n  Box,\n  List,\n  ListItem,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\nclass InitForm extends React.Component {\n  constructor() {\n    super();\n    this.state = { isLoading: false, isError: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let name = event.target.name;\n    let val = event.target.value;\n    if (name === \"member_emails\") {\n      this.setState({ member_emails: val.trim().split(/\\r?\\n/) });\n    } else if (name === \"member_names\") {\n      this.setState({ member_names: val.trim().split(/\\r?\\n/) });\n    } else if (name === \"deadline\") {\n      this.setState({ deadline: Date.parse(val) / 1000 });\n    } else if (name === \"grpSize\") {\n      this.setState({ grpSize: parseInt(val) });\n    } else {\n      this.setState({ [name]: val });\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n\n    for (const i of this.state[\"member_emails\"]) {\n      if (!validator.isEmail(i.trim())) {\n        alert(\n          \"Please Check Member Emails For Error (Invalid Email-Id,Empty Rows etc)\"\n        );\n        return;\n      }\n    }\n    for (const i of this.state[\"member_names\"]) {\n      if (i === \"\") {\n        alert(\"Please Check Member Names For Error (Empty Rows etc)\");\n        return;\n      }\n    }\n    if (\n      this.state.member_emails.length === 0 ||\n      this.state.member_names.length === 0\n    ) {\n      alert(\"Please Fill All Fields\");\n      return;\n    }\n    if (this.state.member_emails.length !== this.state.member_names.length) {\n      alert(\"Different Number Of Names And Email\");\n      return;\n    }\n    let payload = { ...this.state };\n    delete payload[\"isError\"];\n    delete payload[\"isLoading\"];\n    console.log(payload);\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    };\n    fetch(\"https://silverbug.eastus.cloudapp.azure.com/create\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ isLoading: false });\n        if (data[\"status\"] === 0) {\n          this.setState({ isError: true });\n          return;\n        }\n        this.props.history.push(\"/Done\");\n      })\n      .catch(function (err) {\n        this.setState({ isLoading: false, isError: true });\n        console.info(err + \"------err------\");\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n          <CircularProgress style={{ margin: \"20px\" }} />\n        </div>\n      );\n    } else if (this.state.isError) {\n      return (\n        <div>\n          <Alert\n            severity=\"error\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            Error! Something Happened. Please Try Again.\n          </Alert>\n        </div>\n      );\n    }\n\n    return (\n      <Box id=\"main\">\n        <Paper\n          elevation={3}\n          style={{\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            padding: \"10px\",\n            paddingTop: \"30px\",\n          }}\n        >\n          <ul>\n            <li>\n              <b>Whats this app about?</b>\n              <ul>\n                <li>\n                  It automates group formation for\n                  projects/presentations/assignments etc.\n                </li>\n              </ul>\n            </li>\n            <li>\n              <p>\n                <b>But why not just ask people instead?</b>\n                <br />\n                <ul>\n                  <li>\n                    Its really annoying to ask tens of people to see if they are\n                    available.\n                  </li>\n                  <li>\n                    Its even more difficult when most people are matched but\n                    some groups have vacancies.\n                  </li>\n                  <li>\n                    You might feel that you could have been better off with some\n                    other choice.\n                  </li>\n                  <li>\n                    By letting an app do the matching, you also avoid all those\n                    awkward moments where you have to reject someone or get\n                    rejected.\n                  </li>\n                </ul>\n              </p>\n            </li>\n\n            <li>\n              <b>How to use?</b>\n              <br />\n              <ul>\n                <li>Fill out this form.</li>\n                <li>\n                  The app will send a form to all the participants, asking them\n                  to assign a preference (on a scale of 1 to 10) to people they\n                  would like to be paired with.\n                </li>\n                <li>\n                  Once the preferences are collected (or deadline is reached),\n                  the app will form optimal groups and send emails (to you and\n                  all members), informing them of their groups.\n                </li>\n              </ul>\n              <br />\n            </li>\n            <li>\n              <b>How does it work?</b>\n              <ul>\n                <li>\n                  See &nbsp;\n                  <a href=\"https://github.com/AnjayGoel/Stable-Roommate-Generalised\">\n                    this.\n                  </a>\n                  &nbsp; Suggestions, PR are welcomed.\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </Paper>\n        <br />\n        <Paper\n          elevation={3}\n          style={{\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            padding: \"10px\",\n          }}\n        >\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            style={{\n              padding: \"40px\",\n            }}\n          >\n            <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n              <p>Your Name</p>\n              <TextField\n                name=\"owner_name\"\n                type=\"text\"\n                required={true}\n                data-parse=\"uppercase\"\n                onChange={this.handleChange}\n              />\n              <p>Your Email</p>\n              <TextField\n                name=\"owner_email\"\n                type=\"email\"\n                required={true}\n                onChange={this.handleChange}\n              />\n              <p>Title of Project</p>\n              <TextField\n                name=\"title\"\n                type=\"text\"\n                required={true}\n                onChange={this.handleChange}\n              />\n              <p>Group Size</p>\n              <TextField\n                name=\"grpSize\"\n                type=\"number\"\n                InputProps={{ inputProps: { min: 2 } }}\n                required={true}\n                onChange={this.handleChange}\n              />\n              <p>The Deadline for Group Formation</p>\n              <TextField\n                name=\"deadline\"\n                type=\"date\"\n                required={true}\n                onChange={this.handleChange}\n              />\n              <div style={{ display: \"flex\" }}>\n                <span style={{ margin: \"20px\", marginLeft: \"0px\" }}>\n                  <p>Names of Participants (Seperated by a new line)</p>\n                  <TextField\n                    multiline={true}\n                    required={true}\n                    rows={5}\n                    rowsMax={10}\n                    onChange={this.handleChange}\n                    label=\"Participant Names\"\n                    variant=\"outlined\"\n                    name=\"member_names\"\n                  />\n                </span>\n                <span style={{ margin: \"20px\" }}>\n                  <p>Emails of Participant (In same order as names)</p>\n                  <TextField\n                    multiline={true}\n                    required={true}\n                    rows={5}\n                    rowsMax={10}\n                    onChange={this.handleChange}\n                    label=\"Participant Emails\"\n                    variant=\"outlined\"\n                    name=\"member_emails\"\n                  />\n                </span>\n                <p />\n              </div>\n              <Button type=\"Submit\" variant=\"contained\" color=\"primary\">\n                Submit\n              </Button>\n            </form>\n          </Grid>\n        </Paper>\n      </Box>\n    );\n  }\n}\n\nexport default InitForm;\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{textAlign:\"center\", margin:\"30px\"}}>\n            <h3>Thank You!</h3>\n            <p>We will mail you the results when the process is complete.</p>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Autocomplete, Alert } from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Paper,\n  List,\n  ListItem,\n  Grid,\n  Box,\n  Typography,\n  IconButton,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nclass FillPreference extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTag = this.handleTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.delete = this.delete.bind(this);\n\n    this.getNames = this.getNames.bind(this);\n    this.getNames();\n\n    this.state = {\n      name: \"Loading...\",\n      title: \"Loading...\",\n      owner_name: \"Loading....\",\n      all: [],\n      chosen: [],\n      chosenPref: [],\n      isLoading: true,\n      isError: false,\n    };\n  }\n\n  async getNames() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state),\n    };\n    fetch(\n      \"https://silverbug.eastus.cloudapp.azure.com/fill/\" +\n        this.props.match.params.id +\n        \"/\" +\n        this.props.match.params.secret,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ isLoading: false });\n        if (data[\"status\"] === 0) {\n          this.setState({ isError: true });\n          return;\n        }\n        this.setState({\n          name: data[\"name\"],\n          title: data[\"title\"],\n          owner_name: data[\"owner_name\"],\n          all: data[\"names\"].filter((item) => item !== data[\"name\"]),\n          chosen: [],\n        });\n      })\n      .catch(function (err) {\n        this.setState({ isLoading: false, isError: true });\n        console.info(err + \"------err------\");\n      });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const chosenPref = this.state.chosenPref;\n    var data = this.state.chosen.map(function (e, i) {\n      return [e, chosenPref[i]];\n    });\n    this.setState({ isLoading: true });\n    var payload = { data: data };\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    };\n\n    fetch(\n      \"https://silverbug.eastus.cloudapp.azure.com/submit/\" +\n        this.props.match.params.id +\n        \"/\" +\n        this.props.match.params.secret,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[\"status\"] === 0) {\n          this.setState({ isError: true });\n          return;\n        } else {\n          this.props.history.push(\"/Done\");\n        }\n      })\n      .catch(function (err) {\n        this.setState({ isError: true });\n        console.info(err + \"------err------\");\n      });\n  }\n  delete(i) {\n    const newChosen = this.state.chosen;\n    newChosen.splice(i, 1);\n    this.setState({ chosen: newChosen });\n  }\n  pref(i, val) {\n    const newChosenPref = this.state.chosenPref;\n    newChosenPref[i] = parseInt(val);\n    this.setState({ chosenPref: newChosenPref });\n  }\n  handleTag(event, value) {\n    if (!this.state.all.includes(value)) {\n      return;\n    }\n    const newChosen = this.state.chosen;\n    if (!newChosen.includes(value)) {\n      newChosen.push(value);\n      this.setState({ chosen: newChosen });\n    }\n  }\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n          <CircularProgress style={{ margin: \"20px\" }} />\n        </div>\n      );\n    } else if (this.state.isError) {\n      return (\n        <div>\n          <Alert\n            severity=\"error\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            Error! Something Happened. Please Try Again.\n          </Alert>\n        </div>\n      );\n    }\n    const items = [];\n\n    for (const i in this.state.chosen) {\n      items.push(\n        <Item\n          key={i.toString()}\n          name={this.state.chosen[i]}\n          onClick={() => this.delete(i)}\n          onPref={(event) => this.pref(i, event.target.value)}\n        />\n      );\n    }\n    return (\n      <Box id=\"main\" style={{ display: \"inline-block\" }}>\n        <Paper\n          elevation={3}\n          style={{\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            padding: \"10px\",\n            paddingTop: \"30px\",\n          }}\n        >\n          <form onSubmit={this.handleSubmit}>\n            <p>\n              Hello {this.state.name},<br />\n              Please fill out your preferences for {this.state.title}{\" \"}\n            </p>\n            <span\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography style={{ margin: 10 }}>Find Name:</Typography>\n              <Autocomplete\n                onInputChange={this.handleTag}\n                options={this.state.all}\n                getOptionLabel={(option) => option}\n                style={{ width: 300 }}\n                onChange={this.onTagsChange}\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"outlined\" />\n                )}\n              />{\" \"}\n            </span>\n            <Paper elevation={0} style={{ maxHeight: 400, overflow: \"unset\" }}>\n              <List style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                {items}\n              </List>\n            </Paper>\n            <span\n              style={{\n                margin: \"20px\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Button\n                type=\"submit\"\n                style={{ margin: \"20px\", alignSelf: \"center\" }}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            </span>\n            <div>\n              Note:\n              <ul>\n                <li>\n                  You can leave out choices, it that case they will be given a\n                  preference of zero.\n                </li>\n                <li>\n                  Filling out as many choices as you can will lead to a better\n                  matching.\n                </li>\n              </ul>\n            </div>\n          </form>\n        </Paper>\n      </Box>\n    );\n  }\n}\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <ListItem style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Paper>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography align=\"center\" style={{ margin: \"20px\" }}>\n              {this.props.name}\n            </Typography>\n            <TextField\n              style={{ minWidth: \"170px\" }}\n              required={true}\n              onChange={this.props.onPref}\n              InputProps={{ inputProps: { max: 10, min: 0 } }}\n              type=\"number\"\n              label=\"Preference (0-10)\"\n            ></TextField>\n            <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n              <DeleteIcon fontSize=\"large\" />\n            </IconButton>\n          </div>\n        </Paper>\n      </ListItem>\n    );\n  }\n}\nexport default FillPreference;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport InitForm from \"./initForm\";\nimport About from \"./about\";\nimport Done from \"./done\";\nimport { Box, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport FillPreference from \"./fillPreference\";\nReactDOM.render(\n  <React.StrictMode>\n    <Box bgcolor=\"#FAFAFA\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography>Group Us</Typography>\n        </Toolbar>\n      </AppBar>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Box>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nfunction App() {\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/\" component={InitForm} exact />\n        <Route path=\"/home\" component={InitForm} exact />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/done\" component={Done} />\n        <Route path=\"/fillPreference/:id/:secret\" component={FillPreference} />\n      </Switch>\n    </main>\n  );\n}\n"],"sourceRoot":""}
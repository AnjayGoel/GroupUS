{"version":3,"sources":["InitForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["InitForm","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","split","Date","parse","parseInt","preventDefault","console","log","JSON","stringify","state","requestOptions","method","headers","body","fetch","then","response","json","data","props","history","push","catch","err","info","id","style","List","ListItem","Grid","container","spacing","direction","alignItems","minHeight","margin","onSubmit","TextField","type","required","data-parse","onChange","InputProps","inputProps","min","multiline","rowsMax","label","variant","Button","color","React","Component","Item","Paper","Typography","align","minWidth","onPref","max","IconButton","aria-label","onClick","fontSize","App","ReactDOM","render","StrictMode","AppBar","position","Toolbar","document","getElementById"],"mappings":"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","file":"static/js/main.129f0bd7.chunk.js","sourcesContent":["import React from 'react';\nimport { unmountComponentAtNode} from 'react-dom'\nimport {Button,AppBar,Toolbar,List,ListItem,FormControl,Typography, Grid, TextField} from '@material-ui/core'\nimport * as EmailValidator from 'email-validator'\nclass InitForm extends React.Component {\n  constructor() {\n    super();\n    this.handleChange= this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange(event) {\n    let name = event.target.name;\n    let val = event.target.value;\n    if (name === \"member_emails\") {\n      this.setState({\"member_emails\":val.split(/\\r?\\n/)})\n    }\n    else if (name === \"member_names\") {\n      this.setState({\"member_names\":val.split(/\\r?\\n/)})\n    }\n        else if (name === \"deadline\") {\n      this.setState({\"deadline\":Date.parse(val)/1000})\n    }\n      \n      else if (name === \"grpSize\") {\n      this.setState({\"grpSize\":parseInt(val)})\n    }\n    else {\n      this.setState({ [name]: val })\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    console.log(JSON.stringify(this.state))\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('http://127.0.0.1:5000/create', requestOptions)\n        .then(response => (response.json()))\n      .then(data => {\n        console.log(data) \n          this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n          \n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n\n  render() {\n    \n      return (\n          <div id=\"main\">\n            <div style={{ \"margin-left\": \"40px\"}}>\n              <br />\n          How to use:<br />\n              <List>\n                <ListItem>Fill out this Form</ListItem>\n                <ListItem>App sends out a form to all members to fill out their preferences.\n       </ListItem>\n                <ListItem>Once done (or deadline reached), the app will form you and the members groups and send emails to informing people of their groups\n        </ListItem>\n              </List>\n            </div>\n            <br />\n        \n            <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"left\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n                <p>Enter Your Name</p>\n                <TextField\n                  name=\"owner_name\"\n                type=\"text\"\n                required={true}\n                  data-parse=\"uppercase\"\n                  onChange={this.handleChange}\n                />\n                <p>Enter Your Email</p>\n\n                <TextField\n                  name=\"owner_email\"\n                type=\"email\"\n                required={true}\n                  onChange={this.handleChange}\n                />\n\n                <p>Enter Title of Project</p>\n                <TextField\n                  name=\"title\"\n                type=\"text\"\n                                required={true}\n\n                  onChange={this.handleChange}\n              />\n               <p>Enter Max Group Size</p>\n                <TextField\n                  name=\"grpSize\"\n                type=\"number\" InputProps={{inputProps: {  min: 0   }}} \n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>Enter The Deadline for Group Formation</p>\n\n                <TextField\n                  name=\"deadline\"\n                type=\"date\"\n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>Enter Names of Members seperated by newline</p>\n\n                <TextField multiline={true}  required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Emails\" variant=\"outlined\" name=\"member_names\" />\n\n                <p>Enter Emails of Members (In same order as names)</p>\n\n                <TextField multiline={true} required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Emails\" variant=\"outlined\"\n                  name=\"member_emails\" />\n                <p />\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n              </form></Grid></div>\n        \n      );\n    \n  }\n}\n\nexport default InitForm;\n\n\n\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{\"margin\":\"30px\"}}>\n            <h1>Done</h1>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Autocomplete } from '@material-ui/lab'\nimport {Paper,List,ListItem,Grid,Typography,IconButton,Button, TextField} from '@material-ui/core'\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames()\n\n        this.state = {\n            name: \"Anjay\", title: \"Test\", owner_name: \"Test\", all: [], chosen: [], chosenPref: []\n        }\n    }\n\n        async getNames() {\n        const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('http://127.0.0.1:5000/fill/'+this.props.match.params.id+\"/\"+this.props.match.params.secret, requestOptions)\n        .then(response => (response.json()))\n        .then(data => {\n            console.log(data) \n          this.setState({name:data[\"name\"],title:data[\"title\"],owner_name:data[\"owner_name\"],all:data[\"names\"],chosen:[]})\n        }).catch(function(err) {\n          \n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref\n        var data = this.state.chosen.map(function (e, i) {\n            return [e, chosenPref[i]];\n        })\n        var payload = {\"data\":data}\n        console.log(payload)\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n        };\n        \n        fetch('http://127.0.0.1:5000/submit/' + this.props.match.params.id + \"/\" + this.props.match.params.secret, requestOptions)\n        .then(response => (response.json())).then(data => {\n        console.log(data) \n          this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n        console.info(err + \"------err------\");\n    });\n\n    }\n    delete(i) {\n        console.log(\"---\"+i)\n        const newChosen = this.state.chosen\n        newChosen.splice(i, 1)\n        this.setState({ chosen: newChosen })\n        console.log(this.state.chosen)\n    }\n    pref(i, val) {\n        console.log(i+\"---\"+val)\n        const newChosenPref = this.state.chosenPref\n        newChosenPref[i] = parseInt(val)\n        this.setState({chosenPref:newChosenPref})\n    }\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return\n        }\n        console.log(value)\n        const newChosen = this.state.chosen\n        if (!newChosen.includes(value)) {\n            newChosen.push(value)\n            this.setState({ chosen: newChosen })\n        }\n  };\n    render() {\n        const items = []\n                console.log(this.state.chosen)\n\n        for (const i in this.state.chosen) {\n\n            items.push(<Item key={ i.toString()} name={this.state.chosen[i]} onClick = {() => this.delete(i)}  onPref = {(event) => this.pref(i,event.target.value)}/>)\n        }\n      return (\n           <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              \n              <form onSubmit={this.handleSubmit}>\n                  <p>Hello {this.state.name},<br/>Please fill out your Preference for { this.state.title} </p>\n              <span style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                      <Typography style={{margin:10}}>Find Name</Typography><Autocomplete\n                          onInputChange={this.handleTag}\n                    options={this.state.all}\n                    getOptionLabel={(option) => option}\n                          style={{ width: 300 }}\n                                    onChange={this.onTagsChange}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                      />       </span>\n                  <Paper elevation={0} style={{ maxHeight: 400, overflow: 'auto'}}>\n                      <List style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                      {items}\n                      </List></Paper>\n                  <span style={{\"margin\":\"20px\", \"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                  <Button type=\"submit\" style={{ margin:\"20px\" }} variant=\"contained\" color=\"primary\" type=\"Submit\" style={ {alignSelf:\"center\"}} >Submit</Button>\n        </span> </form></Grid>\n      )\n   }\n}\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n  }\n    render() {\n        return (\n            <ListItem style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                <Paper>\n                <div style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"alignItems\": \"center\"}}>\n                <Typography align ='center' style={ {margin:'20px'}}>{this.props.name}</Typography>\n                        <TextField style={{ minWidth:\"170px\" }} required={true} onChange={ this.props.onPref} InputProps={{inputProps: {  max: 10, min: 0   }}} type=\"number\" label=\"Preference (0-10)\"></TextField>\n                <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n          <DeleteIcon fontSize=\"large\" />\n        </IconButton></div></Paper></ListItem>\n \n      )\n   }\n}\nexport default FillPreference;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  InitForm from './InitForm';\nimport About from './about'\nimport Done from './done'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport {BrowserRouter, Route,Switch} from 'react-router-dom';\nimport FillPreference from './fillPreference';\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n     <AppBar position=\"static\">\n            <Toolbar >\n              Group Us\n            </Toolbar>\n      </AppBar>\n        <App />, \n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n    return (\n        <InitForm/>\n    )\n}\n"],"sourceRoot":""}
{"version":3,"sources":["initForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["InitForm","state","isLoading","isError","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","trim","split","Date","parse","parseInt","preventDefault","i","validator","isEmail","alert","member_emails","length","member_names","payload","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","props","history","push","catch","err","info","style","justifyContent","display","CircularProgress","margin","Alert","severity","id","Grid","container","spacing","direction","minHeight","onSubmit","TextField","type","required","data-parse","onChange","InputProps","inputProps","min","multiline","rowsMax","label","variant","Button","color","React","Component","About","Done","textAlign","FillPreference","handleTag","delete","getNames","title","owner_name","all","chosen","chosenPref","match","params","secret","map","e","newChosen","splice","newChosenPref","includes","items","onClick","onPref","pref","toString","alignItems","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","Paper","elevation","maxHeight","overflow","List","alignSelf","Item","ListItem","align","minWidth","max","IconButton","aria-label","fontSize","App","path","component","exact","ReactDOM","render","StrictMode","AppBar","position","Toolbar","document","getElementById"],"mappings":"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","file":"static/js/main.fcd360ff.chunk.js","sourcesContent":["import React from 'react';\nimport validator from 'validator'\nimport { Alert } from '@material-ui/lab'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {Button,List,ListItem, Grid, TextField} from '@material-ui/core'\nclass InitForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {isLoading:false,isError:false}\n    this.handleChange= this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange(event) {\n    let name = event.target.name;\n    let val = event.target.value;\n    if (name === \"member_emails\") {\n      this.setState({\"member_emails\":val.trim().split(/\\r?\\n/)})\n    }\n    else if (name === \"member_names\") {\n      this.setState({\"member_names\":val.trim().split(/\\r?\\n/)})\n    }\n        else if (name === \"deadline\") {\n      this.setState({\"deadline\":Date.parse(val)/1000})\n    }\n      \n      else if (name === \"grpSize\") {\n      this.setState({\"grpSize\":parseInt(val)})\n    }\n    else {\n      this.setState({ [name]: val })\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({isLoading:true})\n \n    for (const i of this.state[\"member_emails\"]) {\n      if (!validator.isEmail(i.trim())) {\n        alert(\"Please Check Member Emails For Error (Invalid Email-Id,Empty Rows etc)\")\n        return\n      }\n      \n    }\n    for (const i of this.state[\"member_names\"]) {\n      if (i===\"\") {\n        alert(\"Please Check Member Names For Error (Empty Rows etc)\")\n        return\n      }\n\n    }\n    if (this.state.member_emails.length === 0 || this.state.member_names.length === 0) {\n      alert(\"Please Fill All Fields\")\n      return;\n    }\n    if (this.state.member_emails.length !== this.state.member_names.length) {\n      alert(\"Different Number Of Names And Email\")\n      return;\n    }\n    let payload = { ... this.state }\n    delete payload[\"isError\"]\n    delete payload[\"isLoading\"]\n    console.log(payload)\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n    };\n    fetch('https://silverbug.eastus.cloudapp.azure.com/create', requestOptions).then(response => (response.json())).then(data => {\n      this.setState({isLoading:false})\n      if (data[\"status\"] === 0) {\n            this.setState({ isError: true })\n            return\n        }\n        this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n            this.setState({ isLoading:false, isError: true })\n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n\n  render() {\n      if (this.state.isLoading) {\n             return (\n                 <div style= {{justifyContent:\"center\", display:\"flex\"}}>\n                     <CircularProgress style={{margin:\"20px\"}} />\n               </div>\n             )\n      }\n      else if (this.state.isError) {\n             return (\n                <div>\n                <Alert severity=\"error\" style={{display: 'flex', justifyContent: 'center'}}>Error! Something Happened. Please Try Again.</Alert>\n                </div>\n              );\n      }\n    \n      return (\n          <div id=\"main\">\n            <div style={{ \"marginLeft\": \"40px\"}}>\n              <br />\n          How to use:<br />\n              <ul>\n                <li>Fill out this form.</li>\n                <li>App sends a email to all the members, asking them their preferences.</li>\n                <li>Once the preferences are collected (or deadline is reached), the app will form groups and send emails (to you and all members), informing them of their groups.</li>\n              </ul>\n            </div>\n            <br />\n            <Grid container\n              spacing={0}\n              direction=\"column\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n                <p>Your Name</p>\n                <TextField\n                  name=\"owner_name\"\n                type=\"text\"\n                required={true}\n                  data-parse=\"uppercase\"\n                  onChange={this.handleChange}\n                />\n                <p>Your Email</p>\n\n                <TextField\n                  name=\"owner_email\"\n                type=\"email\"\n                required={true}\n                  onChange={this.handleChange}\n                />\n\n                <p>Title of Project</p>\n                <TextField\n                  name=\"title\"\n                type=\"text\"\n                                required={true}\n\n                  onChange={this.handleChange}\n              />\n               <p>Group Size</p>\n                <TextField\n                  name=\"grpSize\"\n                type=\"number\" InputProps={{inputProps: {  min: 2   }}} \n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>The Deadline for Group Formation</p>\n\n                <TextField\n                  name=\"deadline\"\n                type=\"date\"\n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>Names of Members seperated by newline</p>\n\n                <TextField multiline={true}  required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Names\" variant=\"outlined\" name=\"member_names\" />\n\n                <p>Emails of Members (In same order as names)</p>\n\n                <TextField multiline={true} required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Emails\" variant=\"outlined\"\n                  name=\"member_emails\" />\n                <p />\n                <Button type=\"Submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n              </form></Grid></div>\n        \n      );\n    \n  }\n}\n\nexport default InitForm;\n\n\n\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{textAlign:\"center\", margin:\"30px\"}}>\n            <h3>Thank You!</h3>\n            <p>We will mail you the results when the process is complete.</p>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Autocomplete,Alert } from '@material-ui/lab'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Paper,List,ListItem,Grid,Typography,IconButton,Button, TextField} from '@material-ui/core'\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames()\n\n        this.state = {\n            name: \"Loading...\", title: \"Loading...\", owner_name: \"Loading....\", all: [], chosen: [], chosenPref: [],isLoading:true,isError:false\n        }\n    }\n\n        async getNames() {\n        const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('https://silverbug.eastus.cloudapp.azure.com/fill/'+this.props.match.params.id+\"/\"+this.props.match.params.secret, requestOptions)\n        .then(response => (response.json()))\n        .then(data => {\n            this.setState({ isLoading: false })\n            if (data[\"status\"] === 0) {\n                this.setState({ isError: true })\n                return\n            }\n          this.setState({name:data[\"name\"],title:data[\"title\"],owner_name:data[\"owner_name\"],all:data[\"names\"],chosen:[]})\n        }).catch(function (err) {\n            this.setState({ isLoading: false, isError:true})\n            console.info(err + \"------err------\");\n    });\n  \n  }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref\n        var data = this.state.chosen.map(function (e, i) {\n            return [e, chosenPref[i]];\n        })\n        this.setState({isLoading:true})\n        var payload = {\"data\":data}\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n        };\n        \n        fetch('https://silverbug.eastus.cloudapp.azure.com/submit/' + this.props.match.params.id + \"/\" + this.props.match.params.secret, requestOptions)\n            .then(response => (response.json())).then(data => {\n                if (data[\"status\"] === 0) {\n                    this.setState({ isError: true })\n                    return\n                }\n                else {\n                    this.props.history.push(\"/Done\");\n                }\n            }).catch(function (err) {\n                this.setState({isError:true})\n                console.info(err + \"------err------\");\n    });\n\n    }\n    delete(i) {\n        const newChosen = this.state.chosen\n        newChosen.splice(i, 1)\n        this.setState({ chosen: newChosen })\n    }\n    pref(i, val) {\n        const newChosenPref = this.state.chosenPref\n        newChosenPref[i] = parseInt(val)\n        this.setState({chosenPref:newChosenPref})\n    }\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return\n        }\n        const newChosen = this.state.chosen\n        if (!newChosen.includes(value)) {\n            newChosen.push(value)\n            this.setState({ chosen: newChosen })\n        }\n  };\n    render() {\n\n        if (this.state.isLoading) {\n             return (\n                 <div style= {{justifyContent:\"center\", display:\"flex\"}}>\n                     <CircularProgress style={{margin:\"20px\"}} />\n            </div>)\n        }\n        else if (this.state.isError) {\n             return (\n                <div>\n                <Alert severity=\"error\" style={{display: 'flex', justifyContent: 'center'}}>Error! Something Happened. Please Try Again.</Alert>\n                </div>\n                );\n        }\n        const items = []\n\n        for (const i in this.state.chosen) {\n\n            items.push(<Item key={ i.toString()} name={this.state.chosen[i]} onClick = {() => this.delete(i)}  onPref = {(event) => this.pref(i,event.target.value)}/>)\n        }\n        return (\n           <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              \n              <form onSubmit={this.handleSubmit}>\n                  <p>Hello {this.state.name},<br/>Please fill out your Preference for { this.state.title} </p>\n              <span style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                      <Typography style={{margin:10}}>Find Name</Typography><Autocomplete\n                          onInputChange={this.handleTag}\n                    options={this.state.all}\n                    getOptionLabel={(option) => option}\n                          style={{ width: 300 }}\n                                    onChange={this.onTagsChange}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                      />       </span>\n                  <Paper elevation={0} style={{ maxHeight: 400, overflow: 'auto'}}>\n                      <List style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                      {items}\n                      </List></Paper>\n                  <span style={{\"margin\":\"20px\", \"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                  <Button type=\"submit\" style={{ margin:\"20px\",alignSelf:\"center\" }} variant=\"contained\" color=\"primary\" >Submit</Button>\n        </span> </form></Grid>\n      )\n   }\n}\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n  }\n    render() {\n        return (\n            <ListItem style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                <Paper>\n                <div style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"alignItems\": \"center\"}}>\n                <Typography align ='center' style={ {margin:'20px'}}>{this.props.name}</Typography>\n                        <TextField style={{ minWidth:\"170px\" }} required={true} onChange={ this.props.onPref} InputProps={{inputProps: {  max: 10, min: 0   }}} type=\"number\" label=\"Preference (0-10)\"></TextField>\n                <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n          <DeleteIcon fontSize=\"large\" />\n        </IconButton></div></Paper></ListItem>\n \n      )\n   }\n}\nexport default FillPreference;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  InitForm from './initForm';\nimport About from './about'\nimport Done from './done'\nimport { AppBar, Toolbar,Typography } from '@material-ui/core'\nimport {HashRouter, Route,Switch} from 'react-router-dom';\nimport FillPreference from './fillPreference';\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n     <AppBar position=\"static\">\n        <Toolbar >\n          <Typography>\n            Group Us\n          </Typography>\n            </Toolbar>\n      </AppBar>\n      <HashRouter>\n        <App />\n    </HashRouter>, \n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n    return (\n        <main>\n        <Switch>\n          <Route path=\"/\" component={InitForm} exact />\n          <Route path=\"/home\" component={InitForm} exact />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/done\" component={Done} />\n          <Route path=\"/fillPreference/:id/:secret\" component={FillPreference} />\n          </Switch>\n        </main>\n    )\n}\n"],"sourceRoot":""}
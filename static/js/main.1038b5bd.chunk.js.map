{"version":3,"sources":["InitForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["InitForm","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","split","Date","parse","parseInt","preventDefault","requestOptions","method","headers","body","JSON","stringify","state","fetch","then","response","json","data","props","history","push","catch","err","console","info","id","style","List","ListItem","Grid","container","spacing","direction","alignItems","minHeight","margin","onSubmit","TextField","type","required","data-parse","onChange","InputProps","inputProps","min","multiline","rowsMax","label","variant","Button","color","React","Component","About","Done","FillPreference","handleTag","delete","getNames","title","owner_name","all","chosen","chosenPref","match","params","secret","payload","map","e","i","newChosen","splice","newChosenPref","includes","items","onClick","onPref","pref","toString","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","Paper","elevation","maxHeight","overflow","alignSelf","Item","align","minWidth","max","IconButton","aria-label","fontSize","App","path","component","exact","ReactDOM","render","StrictMode","AppBar","position","Toolbar","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1038b5bd.chunk.js","sourcesContent":["import React from 'react';\nimport {Button,List,ListItem, Grid, TextField} from '@material-ui/core'\nclass InitForm extends React.Component {\n  constructor() {\n    super();\n    this.handleChange= this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange(event) {\n    let name = event.target.name;\n    let val = event.target.value;\n    if (name === \"member_emails\") {\n      this.setState({\"member_emails\":val.split(/\\r?\\n/)})\n    }\n    else if (name === \"member_names\") {\n      this.setState({\"member_names\":val.split(/\\r?\\n/)})\n    }\n        else if (name === \"deadline\") {\n      this.setState({\"deadline\":Date.parse(val)/1000})\n    }\n      \n      else if (name === \"grpSize\") {\n      this.setState({\"grpSize\":parseInt(val)})\n    }\n    else {\n      this.setState({ [name]: val })\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('http://13.92.86.43:80/create', requestOptions)\n        .then(response => (response.json()))\n      .then(data => {\n          this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n          \n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n\n  render() {\n    \n      return (\n          <div id=\"main\">\n            <div style={{ \"margin-left\": \"40px\"}}>\n              <br />\n          How to use:<br />\n              <List>\n                <ListItem>Fill out this Form</ListItem>\n                <ListItem>App sends out a form to all members to fill out their preferences.\n       </ListItem>\n                <ListItem>Once done (or deadline reached), the app will form you and the members groups and send emails to informing people of their groups\n        </ListItem>\n              </List>\n            </div>\n            <br />\n        \n            <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"left\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n                <p>Your Name</p>\n                <TextField\n                  name=\"owner_name\"\n                type=\"text\"\n                required={true}\n                  data-parse=\"uppercase\"\n                  onChange={this.handleChange}\n                />\n                <p>Your Email</p>\n\n                <TextField\n                  name=\"owner_email\"\n                type=\"email\"\n                required={true}\n                  onChange={this.handleChange}\n                />\n\n                <p>Title of Project</p>\n                <TextField\n                  name=\"title\"\n                type=\"text\"\n                                required={true}\n\n                  onChange={this.handleChange}\n              />\n               <p>Max Group Size</p>\n                <TextField\n                  name=\"grpSize\"\n                type=\"number\" InputProps={{inputProps: {  min: 0   }}} \n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>The Deadline for Group Formation</p>\n\n                <TextField\n                  name=\"deadline\"\n                type=\"date\"\n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>Names of Members seperated by newline</p>\n\n                <TextField multiline={true}  required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Names\" variant=\"outlined\" name=\"member_names\" />\n\n                <p>Emails of Members (In same order as names)</p>\n\n                <TextField multiline={true} required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Emails\" variant=\"outlined\"\n                  name=\"member_emails\" />\n                <p />\n                <Button type=\"Submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n              </form></Grid></div>\n        \n      );\n    \n  }\n}\n\nexport default InitForm;\n\n\n\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{\"margin\":\"30px\"}}>\n            <h1>Done</h1>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Autocomplete } from '@material-ui/lab'\nimport {Paper,List,ListItem,Grid,Typography,IconButton,Button, TextField} from '@material-ui/core'\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames()\n\n        this.state = {\n            name: \"Anjay\", title: \"Test\", owner_name: \"Test\", all: [], chosen: [], chosenPref: []\n        }\n    }\n\n        async getNames() {\n        const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('http://13.92.86.43:80/fill/'+this.props.match.params.id+\"/\"+this.props.match.params.secret, requestOptions)\n        .then(response => (response.json()))\n        .then(data => {\n          this.setState({name:data[\"name\"],title:data[\"title\"],owner_name:data[\"owner_name\"],all:data[\"names\"],chosen:[]})\n        }).catch(function(err) {\n          \n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref\n        var data = this.state.chosen.map(function (e, i) {\n            return [e, chosenPref[i]];\n        })\n        var payload = {\"data\":data}\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n        };\n        \n        fetch('http://13.92.86.43:80/submit/' + this.props.match.params.id + \"/\" + this.props.match.params.secret, requestOptions)\n        .then(response => (response.json())).then(data => {\n        this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n        console.info(err + \"------err------\");\n    });\n\n    }\n    delete(i) {\n        const newChosen = this.state.chosen\n        newChosen.splice(i, 1)\n        this.setState({ chosen: newChosen })\n    }\n    pref(i, val) {\n        const newChosenPref = this.state.chosenPref\n        newChosenPref[i] = parseInt(val)\n        this.setState({chosenPref:newChosenPref})\n    }\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return\n        }\n        const newChosen = this.state.chosen\n        if (!newChosen.includes(value)) {\n            newChosen.push(value)\n            this.setState({ chosen: newChosen })\n        }\n  };\n    render() {\n        const items = []\n\n        for (const i in this.state.chosen) {\n\n            items.push(<Item key={ i.toString()} name={this.state.chosen[i]} onClick = {() => this.delete(i)}  onPref = {(event) => this.pref(i,event.target.value)}/>)\n        }\n      return (\n           <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              \n              <form onSubmit={this.handleSubmit}>\n                  <p>Hello {this.state.name},<br/>Please fill out your Preference for { this.state.title} </p>\n              <span style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                      <Typography style={{margin:10}}>Find Name</Typography><Autocomplete\n                          onInputChange={this.handleTag}\n                    options={this.state.all}\n                    getOptionLabel={(option) => option}\n                          style={{ width: 300 }}\n                                    onChange={this.onTagsChange}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                      />       </span>\n                  <Paper elevation={0} style={{ maxHeight: 400, overflow: 'auto'}}>\n                      <List style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                      {items}\n                      </List></Paper>\n                  <span style={{\"margin\":\"20px\", \"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                  <Button type=\"submit\" style={{ margin:\"20px\",alignSelf:\"center\" }} variant=\"contained\" color=\"primary\" >Submit</Button>\n        </span> </form></Grid>\n      )\n   }\n}\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n  }\n    render() {\n        return (\n            <ListItem style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                <Paper>\n                <div style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"alignItems\": \"center\"}}>\n                <Typography align ='center' style={ {margin:'20px'}}>{this.props.name}</Typography>\n                        <TextField style={{ minWidth:\"170px\" }} required={true} onChange={ this.props.onPref} InputProps={{inputProps: {  max: 10, min: 0   }}} type=\"number\" label=\"Preference (0-10)\"></TextField>\n                <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n          <DeleteIcon fontSize=\"large\" />\n        </IconButton></div></Paper></ListItem>\n \n      )\n   }\n}\nexport default FillPreference;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  InitForm from './InitForm';\nimport About from './about'\nimport Done from './done'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport {HashRouter, Route,Switch} from 'react-router-dom';\nimport FillPreference from './fillPreference';\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n     <AppBar position=\"static\">\n            <Toolbar >\n              Group Us\n            </Toolbar>\n      </AppBar>\n      <HashRouter basename=\"https://anjaygoel.github.io/GroupUs/\">\n        <App />\n    </HashRouter>, \n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n    return (\n        <main>\n        <Switch>\n          <Route path=\"/\" component={InitForm} exact />\n          <Route path=\"/home\" component={InitForm} exact />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/done\" component={Done} />\n          <Route path=\"/fillPreference/:id/:secret\" component={FillPreference} />\n          </Switch>\n        </main>\n    )\n}\n"],"sourceRoot":""}
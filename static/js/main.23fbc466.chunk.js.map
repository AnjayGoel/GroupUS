{"version":3,"sources":["config.js","initForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["api_url","InitForm","state","isLoading","isError","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","member_emails","trim","split","member_names","deadline","Date","parse","grp_size","parseInt","a","preventDefault","i","validator","isEmail","alert","length","payload","Array","push","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","props","history","catch","err","info","style","justifyContent","display","CircularProgress","margin","Alert","severity","Box","id","Paper","elevation","borderRadius","padding","paddingTop","href","Grid","container","spacing","direction","onSubmit","TextField","type","required","onChange","InputProps","inputProps","min","marginLeft","multiline","rows","rowsMax","label","variant","helperText","Button","color","React","Component","About","Done","textAlign","FillPreference","handleTag","delete","getNames","project_title","organizer_name","all","chosen","chosenPref","match","params","secret","filter","item","map","e","newChosen","splice","newChosenPref","includes","items","onClick","onPref","pref","toString","flexDirection","alignItems","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","maxHeight","overflow","List","alignSelf","Item","ListItem","align","minWidth","max","IconButton","fontSize","my_theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","path","component","exact","ReactDOM","render","StrictMode","theme","AppBar","position","Toolbar","Link","textDecoration","document","getElementById"],"mappings":"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","file":"static/js/main.23fbc466.chunk.js","sourcesContent":["let api_url = null\nif (process.env.NODE_ENV === 'development') {\n    api_url = \"http://127.0.0.1:5000\"\n} else {\n    api_url = \"https://silverbug.eastus.cloudapp.azure.com\"\n}\nexport {api_url}","import React from \"react\";\nimport validator from \"validator\";\nimport {Alert} from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    Paper,\n    Button,\n    Box,\n    Grid,\n    TextField,\n} from \"@material-ui/core\";\nimport {api_url} from \"./config\";\n\nclass InitForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {isLoading: false, isError: false};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        let name = event.target.name;\n        let val = event.target.value;\n        if (name === \"member_emails\") {\n            this.setState({member_emails: val.trim().split(/\\r?\\n/)});\n        } else if (name === \"member_names\") {\n            this.setState({member_names: val.trim().split(/\\r?\\n/)});\n        } else if (name === \"deadline\") {\n            this.setState({deadline: Date.parse(val) / 1000});\n        } else if (name === \"grp_size\") {\n            this.setState({grp_size: parseInt(val)});\n        } else {\n            this.setState({[name]: val});\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        this.setState({isLoading: true});\n\n        for (const i of this.state[\"member_emails\"]) {\n            if (!validator.isEmail(i.trim())) {\n                alert(\n                    \"Please Check Member Emails For Error (Invalid Email-Id,Empty Rows etc)\"\n                );\n                return;\n            }\n        }\n        for (const i of this.state[\"member_names\"]) {\n            if (i === \"\") {\n                alert(\"Please Check Member Names For Error (Empty Rows etc)\");\n                return;\n            }\n        }\n        if (\n            this.state.member_emails.length === 0 ||\n            this.state.member_names.length === 0\n        ) {\n            alert(\"Please Fill All Fields\");\n            return;\n        }\n        if (this.state.member_emails.length !== this.state.member_names.length) {\n            alert(\"Different Number Of Names And Email\");\n            return;\n        }\n        let payload = {...this.state};\n        delete payload[\"isError\"];\n        delete payload[\"isLoading\"];\n        delete payload[\"member_emails\"];\n        delete payload[\"member_names\"];\n        payload[\"members\"] = Array()\n\n        for (let i = 0; i < this.state.member_emails.length; i++) {\n            payload[\"members\"].push({\n                \"name\": this.state.member_names[i],\n                \"email\": this.state.member_emails[i]\n            })\n        }\n        console.log(payload);\n        console.log(\"----------\");\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(payload),\n        };\n        fetch(api_url + \"/create\", requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({isLoading: false});\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    return;\n                }\n                this.props.history.push(\"/Done\");\n            })\n            .catch(function (err) {\n                this.setState({isLoading: false, isError: true});\n                console.info(err + \"------err------\");\n            }.bind(this));\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div style={{justifyContent: \"center\", display: \"flex\"}}>\n                    <CircularProgress style={{margin: \"20px\"}}/>\n                </div>\n            );\n        } else if (this.state.isError) {\n            return (\n                <div>\n                    <Alert\n                        severity=\"error\"\n                        style={{display: \"flex\", justifyContent: \"center\"}}\n                    >\n                        Error! Something Happened. Please Try Again.\n                    </Alert>\n                </div>\n            );\n        }\n\n        return (\n            <Box id=\"main\">\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <ul>\n                        <li>\n                            <b>Whats this app about?</b>\n                            <ul>\n                                <li>\n                                    It automates group formation for\n                                    projects/presentations/assignments etc, based on individual preferences.\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            <p>\n                                <b>But why not just ask other participants instead?</b>\n                                <br/>\n                                <ul>\n                                    <li>\n                                        Asking dozens of people to see if they are\n                                        available is really annoying.\n                                    </li>\n                                    <li>\n                                        You might feel that you would have been better off with some other choice.\n                                    </li>\n                                    <li>\n                                        A situation might arise where everyone is grouped but some groups are left with\n                                        vacancies.\n                                    </li>\n\n                                    <li>\n                                        By letting an app do the matching, you also avoid all those\n                                        awkward moments where you have to reject someone or get\n                                        rejected.\n                                    </li>\n                                </ul>\n                            </p>\n                        </li>\n\n                        <li>\n                            <b>How to use?</b>\n                            <br/>\n                            <ul>\n                                <li>You fill out this form.</li>\n                                <li>\n                                    The app will mail a form to every participants, asking them\n                                    to assign a preference (on a scale of 1 to 10) to all the other participants they\n                                    would like to be grouped with.\n                                </li>\n                                <li>\n                                    Once everyone has filled their choices (or the deadline is reached),\n                                    the app will form optimal groups and send emails to all the participants,\n                                    informing them of their respective groups.\n                                    Additionally it will also send you a mail containing all group allocations.\n                                </li>\n                            </ul>\n                            <br/>\n                        </li>\n                        <li>\n                            <b>How does it work?</b>\n                            <ul>\n                                <li>\n                                    See&nbsp;\n                                    <a href=\"https://github.com/AnjayGoel/Stable-Roommate-Generalised\">\n                                        this\n                                    </a>. Suggestions, PRs are welcomed.\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </Paper>\n                <br/>\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                    }}\n                >\n                    <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        style={{\n                            padding: \"40px\",\n                        }}\n                    >\n                        <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n                            <p>Your Name</p>\n                            <TextField\n                                name=\"organizer_name\"\n                                type=\"text\"\n                                required={true}\n                                data-parse=\"uppercase\"\n                                onChange={this.handleChange}\n                            />\n                            <p>Your Email</p>\n                            <TextField\n                                name=\"organizer_email\"\n                                type=\"email\"\n                                required={true}\n                                onChange={this.handleChange}\n                            />\n                            <p>Title of Project</p>\n                            <TextField\n                                name=\"project_title\"\n                                type=\"text\"\n                                required={true}\n                                onChange={this.handleChange}\n                            />\n                            <p>Group Size</p>\n                            <TextField\n                                name=\"grp_size\"\n                                type=\"number\"\n                                InputProps={{inputProps: {min: 2}}}\n                                required={true}\n                                onChange={this.handleChange}\n                            />\n                            <p>The Deadline for Group Formation</p>\n                            <TextField\n                                name=\"deadline\"\n                                type=\"date\"\n                                required={true}\n                                onChange={this.handleChange}\n                            />\n                            <div style={{display: \"flex\"}}>\n                <span style={{margin: \"20px\", marginLeft: \"0px\"}}>\n                  <p>Participants Names</p>\n                  <TextField\n                      multiline={true}\n                      required={true}\n                      rows={5}\n                      rowsMax={10}\n                      onChange={this.handleChange}\n                      label=\"Participant Names\"\n                      variant=\"outlined\"\n                      name=\"member_names\"\n                      helperText=\"Seperated by a new line\"\n\n                  />\n                </span>\n                                <span style={{margin: \"20px\"}}>\n                                    <p>Participant Emails</p>\n                  <TextField\n                      multiline={true}\n                      required={true}\n                      rows={5}\n                      rowsMax={10}\n                      onChange={this.handleChange}\n                      label=\"Participant Emails\"\n                      variant=\"outlined\"\n                      name=\"member_emails\"\n                      helperText=\"Ensure same order as names\"\n                  />\n                </span>\n                                <p/>\n                            </div>\n                            <Button type=\"Submit\" variant=\"contained\" color=\"primary\">\n                                Submit\n                            </Button>\n                        </form>\n                    </Grid>\n                </Paper>\n            </Box>\n        );\n    }\n}\n\nexport default InitForm;\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{textAlign:\"center\", margin:\"30px\"}}>\n            <h3>Thank You!</h3>\n            <p>We will mail you the results when the process is complete.</p>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {Autocomplete, Alert} from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    Paper,\n    List,\n    ListItem,\n    Box,\n    Typography,\n    IconButton,\n    Button,\n    TextField,\n} from \"@material-ui/core\";\nimport {api_url} from \"./config\";\n\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames();\n\n        this.state = {\n            name: \"Loading...\",\n            project_title: \"Loading...\",\n            organizer_name: \"Loading....\",\n            all: [],\n            chosen: [],\n            chosenPref: [],\n            isLoading: true,\n            isError: false,\n        };\n    }\n\n    async getNames() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(this.state),\n        };\n        fetch(\n            api_url + \"/vote/\" +\n            this.props.match.params.id +\n            \"/\" +\n            this.props.match.params.secret,\n            requestOptions\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({isLoading: false});\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    return;\n                }\n                this.setState({\n                    name: data[\"name\"],\n                    project_title: data[\"project_title\"],\n                    organizer_name: data[\"organizer_name\"],\n                    all: data[\"names\"].filter((item) => item !== data[\"name\"]),\n                    chosen: [],\n                });\n            })\n            .catch(function (err) {\n                this.setState({isLoading: false, isError: true});\n                console.info(err + \"------err------\");\n            }.bind(this));\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref;\n        var data = this.state.chosen.map(function (e, i) {\n            return {\"name\": e, \"score\": chosenPref[i]};\n        });\n        this.setState({isLoading: true});\n        var payload = {data: data};\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(payload),\n        };\n\n        fetch(\n            api_url + \"/vote/\" +\n            this.props.match.params.id +\n            \"/\" +\n            this.props.match.params.secret,\n            requestOptions\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    return;\n                } else {\n                    this.props.history.push(\"/Done\");\n                }\n            })\n            .catch(function (err) {\n                this.setState({isError: true});\n                console.info(err + \"------err------\");\n            }.bind(this));\n    }\n\n    delete(i) {\n        const newChosen = this.state.chosen;\n        newChosen.splice(i, 1);\n        this.setState({chosen: newChosen});\n    }\n\n    pref(i, val) {\n        const newChosenPref = this.state.chosenPref;\n        newChosenPref[i] = parseInt(val);\n        this.setState({chosenPref: newChosenPref});\n    }\n\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return;\n        }\n        const newChosen = this.state.chosen;\n        if (!newChosen.includes(value)) {\n            newChosen.push(value);\n            this.setState({chosen: newChosen});\n        }\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div style={{justifyContent: \"center\", display: \"flex\"}}>\n                    <CircularProgress style={{margin: \"20px\"}}/>\n                </div>\n            );\n        } else if (this.state.isError) {\n            return (\n                <div>\n                    <Alert\n                        severity=\"error\"\n                        style={{display: \"flex\", justifyContent: \"center\"}}\n                    >\n                        Error! Something Happened. Please Try Again.\n                    </Alert>\n                </div>\n            );\n        }\n        const items = [];\n\n        for (const i in this.state.chosen) {\n            items.push(\n                <Item\n                    key={i.toString()}\n                    name={this.state.chosen[i]}\n                    onClick={() => this.delete(i)}\n                    onPref={(event) => this.pref(i, event.target.value)}\n                />\n            );\n        }\n        return (\n            <Box id=\"main\" style={{display: \"inline-block\"}}>\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                        <p>\n                            Hello {this.state.name},<br/>\n                            Please fill out your preferences for {this.state.project_title}{\" \"}\n                        </p>\n                        <span\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n              <Typography style={{margin: 10}}>Find Name:</Typography>\n              <Autocomplete\n                  onInputChange={this.handleTag}\n                  options={this.state.all}\n                  getOptionLabel={(option) => option}\n                  style={{width: 300}}\n                  onChange={this.onTagsChange}\n                  renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\"/>\n                  )}\n              />{\" \"}\n            </span>\n                        <Paper elevation={0} style={{maxHeight: 400, overflow: \"unset\"}}>\n                            <List style={{justifyContent: \"center\", alignItems: \"center\"}}>\n                                {items}\n                            </List>\n                        </Paper>\n                        <span\n                            style={{\n                                margin: \"20px\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n              <Button\n                  type=\"submit\"\n                  style={{margin: \"20px\", alignSelf: \"center\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n              >\n                Submit\n              </Button>\n            </span>\n                        <div>\n                            Note:\n                            <ul>\n                                <li>\n                                    You can leave out choices, it that case they will be assigned a\n                                    preference of zero.\n                                </li>\n                                <li>\n                                    Filling out as many choices as you can will lead to a better\n                                    matching.\n                                </li>\n                            </ul>\n                        </div>\n                    </form>\n                </Paper>\n            </Box>\n        );\n    }\n}\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <ListItem style={{justifyContent: \"center\", alignItems: \"center\"}}>\n                <Paper>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Typography align=\"center\" style={{margin: \"20px\"}}>\n                            {this.props.name}\n                        </Typography>\n                        <TextField\n                            style={{minWidth: \"170px\"}}\n                            required={true}\n                            onChange={this.props.onPref}\n                            InputProps={{inputProps: {max: 10, min: 0}}}\n                            type=\"number\"\n                            label=\"Preference (0-10)\"\n                        />\n                        <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n                            <DeleteIcon fontSize=\"large\"/>\n                        </IconButton>\n                    </div>\n                </Paper>\n            </ListItem>\n        );\n    }\n}\n\nexport default FillPreference;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport InitForm from \"./initForm\";\nimport About from \"./about\";\nimport Done from \"./done\";\nimport {Box, AppBar, Toolbar, Typography, Link, MuiThemeProvider} from \"@material-ui/core\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport FillPreference from \"./fillPreference\";\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst my_theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#757ce8',\n            main: '#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#f44336',\n            dark: '#ba000d',\n            contrastText: '#000',\n        },\n    },\n});\n\nconst my_theme_d = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#000000',\n            main: '#000000',\n            dark: '#000000',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#f44336',\n            dark: '#ba000d',\n            contrastText: '#000',\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={my_theme}>\n            <Box>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography>\n                            <Link href=\"https://anjaygoel.github.io/GroupUs/\" color=\"inherit\" style={{textDecoration: 'none'}}>\n                                Group Us\n                            </Link>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Box>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nfunction App() {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/\" component={InitForm} exact/>\n                <Route path=\"/home\" component={InitForm} exact/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/done\" component={Done}/>\n                <Route path=\"/fillPreference/:id/:secret\" component={FillPreference}/>\n            </Switch>\n        </main>\n    );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["InitForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["InitForm","handleChange","bind","handleSubmit","event","name","target","val","value","this","setState","trim","split","Date","parse","parseInt","preventDefault","state","i","validator","isEmail","alert","member_emails","length","member_names","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","props","history","push","catch","err","console","info","id","style","List","ListItem","Grid","container","spacing","direction","alignItems","minHeight","margin","onSubmit","TextField","type","required","data-parse","onChange","InputProps","inputProps","min","multiline","rowsMax","label","variant","Button","color","React","Component","About","Done","FillPreference","handleTag","delete","getNames","title","owner_name","all","chosen","chosenPref","match","params","secret","payload","map","e","newChosen","splice","newChosenPref","includes","items","onClick","onPref","pref","toString","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","Paper","elevation","maxHeight","overflow","alignSelf","Item","align","minWidth","max","IconButton","aria-label","fontSize","App","path","component","exact","ReactDOM","render","StrictMode","AppBar","position","Toolbar","document","getElementById"],"mappings":"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","file":"static/js/main.f457b884.chunk.js","sourcesContent":["import React from 'react';\nimport validator from 'validator'\nimport {Button,List,ListItem, Grid, TextField} from '@material-ui/core'\nclass InitForm extends React.Component {\n  constructor() {\n    super();\n    this.handleChange= this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange(event) {\n    let name = event.target.name;\n    let val = event.target.value;\n    if (name === \"member_emails\") {\n      this.setState({\"member_emails\":val.trim().split(/\\r?\\n/)})\n    }\n    else if (name === \"member_names\") {\n      this.setState({\"member_names\":val.trim().split(/\\r?\\n/)})\n    }\n        else if (name === \"deadline\") {\n      this.setState({\"deadline\":Date.parse(val)/1000})\n    }\n      \n      else if (name === \"grpSize\") {\n      this.setState({\"grpSize\":parseInt(val)})\n    }\n    else {\n      this.setState({ [name]: val })\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n \n    for (const i of this.state[\"member_emails\"]) {\n      if (!validator.isEmail(i.trim())) {\n        alert(\"Please Check Member Emails For Error (Invalid Email-Id,Empty Rows etc)\")\n        return\n      }\n      \n    }\n    for (const i of this.state[\"member_names\"]) {\n      if (i===\"\") {\n        alert(\"Please Check Member Names For Error (Empty Rows etc)\")\n        return\n      }\n\n    }\n    if (this.state.member_emails.length === 0 || this.state.member_names.length === 0) {\n      alert(\"Please Fill All Fields\")\n      return;\n    }\n    if (this.state.member_emails.length !== this.state.member_names.length) {\n      alert(\"Different Number Of Names And Email\")\n      return;\n    }\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('https://silverbug.eastus.cloudapp.azure.com/create', requestOptions).then(response => (response.json())).then(data => {\n        if (data[\"status\"] === 0) {\n          alert(data[\"message\"])\n          return\n        }\n        this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n          \n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n\n  render() {\n    \n      return (\n          <div id=\"main\">\n            <div style={{ \"marginLeft\": \"40px\"}}>\n              <br />\n          How to use:<br />\n              <List>\n                <ListItem>Fill out this Form</ListItem>\n                <ListItem>App sends out a form to all members to fill out their preferences.\n       </ListItem>\n                <ListItem>Once done (or deadline reached), the app will form you and the members groups and send emails to informing people of their groups\n        </ListItem>\n              </List>\n            </div>\n            <br />\n        \n            <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"left\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              <form id=\"mainForm\" onSubmit={this.handleSubmit}>\n                <p>Your Name</p>\n                <TextField\n                  name=\"owner_name\"\n                type=\"text\"\n                required={true}\n                  data-parse=\"uppercase\"\n                  onChange={this.handleChange}\n                />\n                <p>Your Email</p>\n\n                <TextField\n                  name=\"owner_email\"\n                type=\"email\"\n                required={true}\n                  onChange={this.handleChange}\n                />\n\n                <p>Title of Project</p>\n                <TextField\n                  name=\"title\"\n                type=\"text\"\n                                required={true}\n\n                  onChange={this.handleChange}\n              />\n               <p>Max Group Size</p>\n                <TextField\n                  name=\"grpSize\"\n                type=\"number\" InputProps={{inputProps: {  min: 0   }}} \n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>The Deadline for Group Formation</p>\n\n                <TextField\n                  name=\"deadline\"\n                type=\"date\"\n                                required={true}\n\n                  onChange={this.handleChange}\n                />\n\n                <p>Names of Members seperated by newline</p>\n\n                <TextField multiline={true}  required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Names\" variant=\"outlined\" name=\"member_names\" />\n\n                <p>Emails of Members (In same order as names)</p>\n\n                <TextField multiline={true} required={true} rowsMax={10} onChange={this.handleChange} label=\"Member Emails\" variant=\"outlined\"\n                  name=\"member_emails\" />\n                <p />\n                <Button type=\"Submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n              </form></Grid></div>\n        \n      );\n    \n  }\n}\n\nexport default InitForm;\n\n\n\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{\"margin\":\"30px\"}}>\n            <h1>Done</h1>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Autocomplete } from '@material-ui/lab'\nimport {Paper,List,ListItem,Grid,Typography,IconButton,Button, TextField} from '@material-ui/core'\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames()\n\n        this.state = {\n            name: \"Loading...\", title: \"Loading...\", owner_name: \"Loading....\", all: [], chosen: [], chosenPref: []\n        }\n    }\n\n        async getNames() {\n        const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n    };\n    fetch('https://silverbug.eastus.cloudapp.azure.com/fill/'+this.props.match.params.id+\"/\"+this.props.match.params.secret, requestOptions)\n        .then(response => (response.json()))\n        .then(data => {\n        if (data[\"status\"] === 0) {\n            alert(data[\"message\"])\n            return\n        }\n          this.setState({name:data[\"name\"],title:data[\"title\"],owner_name:data[\"owner_name\"],all:data[\"names\"],chosen:[]})\n        }).catch(function(err) {\n        console.info(err + \"------err------\");\n    });\n  \n  }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref\n        var data = this.state.chosen.map(function (e, i) {\n            return [e, chosenPref[i]];\n        })\n        var payload = {\"data\":data}\n        const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n        };\n        \n        fetch('https://silverbug.eastus.cloudapp.azure.com/submit/' + this.props.match.params.id + \"/\" + this.props.match.params.secret, requestOptions)\n            .then(response => (response.json())).then(data => {\n         if (data[\"status\"] === 0) {\n             alert(data[\"message\"])\n             return\n        }\n        this.props.history.push(\"/Done\");\n        }).catch(function(err) {\n        console.info(err + \"------err------\");\n    });\n\n    }\n    delete(i) {\n        const newChosen = this.state.chosen\n        newChosen.splice(i, 1)\n        this.setState({ chosen: newChosen })\n    }\n    pref(i, val) {\n        const newChosenPref = this.state.chosenPref\n        newChosenPref[i] = parseInt(val)\n        this.setState({chosenPref:newChosenPref})\n    }\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return\n        }\n        const newChosen = this.state.chosen\n        if (!newChosen.includes(value)) {\n            newChosen.push(value)\n            this.setState({ chosen: newChosen })\n        }\n  };\n    render() {\n        const items = []\n\n        for (const i in this.state.chosen) {\n\n            items.push(<Item key={ i.toString()} name={this.state.chosen[i]} onClick = {() => this.delete(i)}  onPref = {(event) => this.pref(i,event.target.value)}/>)\n        }\n      return (\n           <Grid container\n              spacing={0}\n              direction=\"column\"\n              alignItems=\"center\"\n              style={{ minHeight: '100vh', margin:'40px'}}>\n              \n              <form onSubmit={this.handleSubmit}>\n                  <p>Hello {this.state.name},<br/>Please fill out your Preference for { this.state.title} </p>\n              <span style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                      <Typography style={{margin:10}}>Find Name</Typography><Autocomplete\n                          onInputChange={this.handleTag}\n                    options={this.state.all}\n                    getOptionLabel={(option) => option}\n                          style={{ width: 300 }}\n                                    onChange={this.onTagsChange}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                      />       </span>\n                  <Paper elevation={0} style={{ maxHeight: 400, overflow: 'auto'}}>\n                      <List style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                      {items}\n                      </List></Paper>\n                  <span style={{\"margin\":\"20px\", \"display\":\"flex\", \"flexDirection\": \"row\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\n                  <Button type=\"submit\" style={{ margin:\"20px\",alignSelf:\"center\" }} variant=\"contained\" color=\"primary\" >Submit</Button>\n        </span> </form></Grid>\n      )\n   }\n}\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n  }\n    render() {\n        return (\n            <ListItem style={{ \"justifyContent\": \"center\", \"alignItems\": \"center\" }}>\n                <Paper>\n                <div style={{\"display\":\"flex\", \"flexDirection\": \"row\", \"alignItems\": \"center\"}}>\n                <Typography align ='center' style={ {margin:'20px'}}>{this.props.name}</Typography>\n                        <TextField style={{ minWidth:\"170px\" }} required={true} onChange={ this.props.onPref} InputProps={{inputProps: {  max: 10, min: 0   }}} type=\"number\" label=\"Preference (0-10)\"></TextField>\n                <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n          <DeleteIcon fontSize=\"large\" />\n        </IconButton></div></Paper></ListItem>\n \n      )\n   }\n}\nexport default FillPreference;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  InitForm from './InitForm';\nimport About from './about'\nimport Done from './done'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport {HashRouter, Route,Switch} from 'react-router-dom';\nimport FillPreference from './fillPreference';\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n     <AppBar position=\"static\">\n            <Toolbar >\n              Group Us\n            </Toolbar>\n      </AppBar>\n      <HashRouter>\n        <App />\n    </HashRouter>, \n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n    return (\n        <main>\n        <Switch>\n          <Route path=\"/\" component={InitForm} exact />\n          <Route path=\"/home\" component={InitForm} exact />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/done\" component={Done} />\n          <Route path=\"/fillPreference/:id/:secret\" component={FillPreference} />\n          </Switch>\n        </main>\n    )\n}\n"],"sourceRoot":""}